name: CI

on:
  push:
    paths-ignore:
      - '.github/workflows/manual-release.yml'
  pull_request:
    branches:
      - main

jobs:
  bundle-app:
    name: Generate App Bundle
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.appinfo.outputs.app_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      
      # FIXME use manifest and jq instead of below
      - name: Get App Info
        id: appinfo
        run: |
          NAME=$(cat default/app.conf | grep -e ^id | awk '{print $3}')
          echo "::set-output name=app_name::$NAME"
      
      - name: Bundle app source
        run: |
          mkdir dist
          tar -zcvf dist/${{ steps.appinfo.outputs.app_name }}.tgz --exclude='.[^/]*' --exclude=./dist .
  
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app_tgz
          path: dist/${{ steps.appinfo.outputs.app_name }}.tgz

  slim-validate:
    name: SLIM Validation
    needs: bundle-app
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: app_tgz

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install splunk-packaging-toolkit
      
      - name: Unpackage artifact
        run: |
          mkdir ${{ needs.bundle-app.outputs.app_name }}
          tar -xf ${{ needs.bundle-app.outputs.app_name }}.tgz -C ${{ needs.bundle-app.outputs.app_name }}
      
      - name: Slim Validate
        run: slim validate ${{ needs.bundle-app.outputs.app_name }}

  appinspect-cli:
    name: AppInspect CLI Validation
    needs: slim-validate
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: app_tgz
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      
      - name: Install dependencies
        run: |
          python -m pip install splunk-appinspect
      
      - name: Run AppInspect
        run: |
          app_package=$(ls -1 *gz | xargs basename)
          splunk-appinspect inspect $app_package --output-file appinspect.json --log-level INFO
          appinspect_id=$(cat appinspect.json | jq -r '.request_id')
          echo "AppInspect ID: ${appinspect_id}"
          exit `cat appinspect.json | jq '.summary.failure'`

  # appinspect-api:
  #   name: AppInspect API Validation
  #   needs: 
  #     - bundle-app
  #     - appinspect-cli
  #     - slim-validate
  #   runs-on: ubuntu-latest
  #   # Job not executed if branch is not main
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: app_tgz

  #     - name: Run AppInspect
  #       uses: splunk/appinspect-api-action@v2
  #       with:
  #         filePath: ${{ needs.bundle-app.outputs.app_name }}.tgz
  #         splunkUser: ${{ secrets.SPLUNK_USER }}
  #         splunkPassword: ${{ secrets.SPLUNK_PASS }}
  #         includedTags: cloud
  #         failOnError: true
  #         failOnWarning: false


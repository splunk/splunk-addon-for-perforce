[hx:csv]
# Assigning sourcetype depending on eventtype
SHOULD_LINEMERGE = false
TRANSFORMS-set_sourcetype = set_audit, set_auth, set_errors, set_events, set_route, set_triggers, set_tusage, set_trpc, set_tdb, set_tnetwork_estimates
# set_user, set_integrity

# 
# Field Extractions based on sourcetype
# 

[hx:audit]
SHOULD_LINEMERGE = false
REPORT-audit = REPORT-audit

# CIM mapping
FIELDALIAS-action = f_file AS action
# EVAL-action = CASE(f_file=="purge","cleared",(f_file=="print" or f_file=="diff"),"read",(f_file=="sync" or f_file=="revert" or f_file=="import"),"modified",f_file=="submit","created",true(),f_file)
# FIXME review the action
EVAL-change_type = "filesystem"
FIELDALIAS-command = f_func AS command
FIELDALIAS-dest = f_serverid AS dest
EVAL-object_category = "file"
FIELDALIAS-object_path = f_rev AS object_path
EVAL-protocol = "tcp"
FIELDALIAS-object_attrs = f_action AS object_attrs
EVAL-src = IF(isnull(f_progf_version),"Unknown",f_progf_version)
FIELDALIAS-src_user = f_user AS src_user
FIELDALIAS-src_user_name = f_client AS src_user_name
EVAL-status = "success"
FIELDALIAS-user = f_user AS user
EVAL-vendor_product = "Perforce Helix Core"

[hx:auth]
SHOULD_LINEMERGE = false
REPORT-auth = REPORT-auth

# CIM mapping
EVAL-action = CASE(f_result=="fail","failure",true(),f_result) 
EVAL-app = "helix-core"
EXTRACT-signatureid = (?<signature_id>[0-9]{2}).*
LOOKUP-signature =  structured_log_events eventtype AS signature_id OUTPUT eventname AS signature
FIELDALIAS-dest = f_serverid AS dest
FIELDALIAS-src = f_host AS src
FIELDALIAS-src_user = f_user AS src_user
FIELDALIAS-user = f_user AS user


[hx:errors]
SHOULD_LINEMERGE = false
REPORT-errors = REPORT-errors

[hx:events]
SHOULD_LINEMERGE = false
REPORT-events = REPORT-events

[hx:integrity]
SHOULD_LINEMERGE = false
REPORT-integrity = REPORT-integrity

[hx:route]
SHOULD_LINEMERGE = false
REPORT-route = REPORT-route

# CIM mapping
FIELDALIAS-src = f_client as src
FIELDALIAS-dest = f_serverid as dest
FIELDALIAS-rule = f_func as rule
FIELDALIAS-user = f_user as user
EXTRACT-dvc_ip = (?<dvc_ip>([0-9]{1,3}\.){3}[0-9]{1,3})
EXTRACT-route = (?<src_ip>([0-9]{1,3}\.){3}[0-9]{1,3})\]-\(\w+\)-(?<dest_ip>([0-9]{1,3}\.){3}[0-9]{1,3})
EVAL-action = "allowed"
EVAL-app = "helix-core"
EVAL-protocol = "ip"
EVAL-transport = "tcp"
EVAL-vendor_product = "Perforce Helix Core"

[hx:triggers]
SHOULD_LINEMERGE = false
REPORT-triggers = REPORT-triggers

[hx:user]
SHOULD_LINEMERGE = false
REPORT-user = REPORT-user

[hx:track:db]
SHOULD_LINEMERGE = false
REPORT-trackdb = REPORT-trackdb

[hx:track:rpc]
SHOULD_LINEMERGE = false
REPORT-trackrpc = REPORT-trackrpc

# CIM mapping
EVAL-action = "allowed"
FIELDALIAS-dest = f_serverid AS dest
FIELDALIAS-process = f_func AS process
FIELDALIAS-process_name = f_prog AS process_name
FIELDALIAS-original_file_name = f_prog AS original_file_name
FIELDALIAS-processid = f_pid AS process_id
FIELDALIAS-user = f_user AS user

EVAL-parent_process = "unknown"
EVAL-parent_process_name = "unknown"
EVAL-vendor_product = "Perforce Helix Core"

[hx:track:usage]
SHOULD_LINEMERGE = false
REPORT-trackusage = REPORT-trackusage

[hx:track:networkestimates]
SHOULD_LINEMERGE = false
REPORT-tracknetworkestimates = REPORT-tracknetworkestimates

# FIXME below
# [(?::){0}hx:track*]
# FIELDALIAS-bytesin = f_recvBytes as bytes_in
# FIELDALIAS-bytesout = f_sendBytes as bytes_out
# EVAL-bytes = f_recvBytes + f_sendBytes

# FIELDALIAS-packetsin = f_recvCount as packets_in
# FIELDALIAS-packetsout = f_sendCount as packets_out
# EVAL-packets = f_recvCount + f_sendCount